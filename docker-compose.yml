version: '3.7'
services:

  ## Kafka Docker Compose Config
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - payscam-network

  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    depends_on:
      - zookeeper
    networks:
      - payscam-network

  ## ELK Docker Compose Config
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: single-node
    networks:
      - payscam-network
    ports:
      - "9200:9200"

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.12.0
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - payscam-network

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash-oss:7.12.0
    command: bin/logstash -f /etc/logstash/config/logstash.conf
    volumes:
      - ./logstash/logstash.conf:/etc/logstash/config/logstash.conf:ro
      - ./logs/payment_processing_service.log:/usr/share/logstash/logs/payment_processing_service.log:ro
      - ./logs/user_service.log:/usr/share/logstash/logs/user_service.log:ro
    ports:
      - "5044:5044"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
    networks:
      - payscam-network
    depends_on:
      - elasticsearch

  ## React-app Docker Compose Config
  payscam-react:
    container_name: payscam-react
    image: potacocat/payscam-react-app:latest
    ports:
      - "3000:3000"

  ## Postgres Docker Compose Config
  postgres-database:
    container_name: postgres-database
    image: postgres:latest
    environment:
      POSTGRES_DB: payscam-database
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: password
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: always
    networks:
      - payscam-network

  ## User-Service Docker Compose Config
  user-service:
    container_name: user-service
    image: potacocat/payscam-user-service:latest
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: production
    restart: on-failure
    depends_on:
      - postgres-database
      - zookeeper
      - kafka
    volumes:
      - ./user-service
      - ./logs/user_service.log:/logs/user_service.log
    networks:
      - payscam-network

  ## Payment-Processing-Service Docker Compose Config
  payment-processing-service:
    container_name: payment-processing-service
    image: potacocat/payscam-payment-processing-service:latest
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: production
    depends_on:
      - postgres-database
      - zookeeper
      - kafka
    restart: on-failure
    volumes:
      - ./payment-processing-service
      - ./logs/payment_processing_service.log:/logs/payment_processing_service.log
    networks:
      - payscam-network

  ## Risk-Management-Service Docker Compose Config
  risk-management-service:
    container_name: risk-management-service
    image: potacocat/payscam-risk-management-service:latest
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: production
    depends_on:
      - postgres-database
      - zookeeper
      - kafka
    volumes:
      - ./risk-management-service
    networks:
      - payscam-network

networks:
  payscam-network:
    driver: bridge
