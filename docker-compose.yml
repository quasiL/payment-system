version: '3.7'
services:

  ## Kafka Docker Compose Config
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - payscam-network

  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    depends_on:
      - zookeeper
    networks:
      - payscam-network

  ## User-Service Docker Compose Config
  user-service:
    container_name: user-service
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: production
    restart: on-failure
    depends_on:
      - postgres-database
      - zookeeper
      - kafka
    volumes:
      - ./user-service
    networks:
      - payscam-network

  ## Payment-Processing-Service Docker Compose Config
  payment-processing-service:
    container_name: payment-processing-service
    build:
      context: ./payment-processing-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: production
    depends_on:
      - postgres-database
      - zookeeper
      - kafka
    restart: on-failure
    volumes:
      - ./payment-processing-service
    networks:
      - payscam-network

  ## Risk-Management-Service Docker Compose Config
  risk-management-service:
    container_name: risk-management-service
    build:
      context: ./risk-management-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: production
    depends_on:
      - postgres-database
      - zookeeper
      - kafka
    volumes:
      - ./risk-management-service
    networks:
      - payscam-network

  ## React-app Docker Compose Config
  payscam-react:
    container_name: payscam-react
    build:
      context: ./payscam-react
      dockerfile: Dockerfile
    ports:
      - "3000:3000"

  ## Postgres Docker Compose Config
  postgres-database:
    container_name: postgres-database
    image: postgres:latest
    environment:
      POSTGRES_DB: payscam-database
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: password
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: always
    networks:
      - payscam-network

#  elasticsearch:
#    container_name: elasticsearch
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
#    volumes:
#      - type: volume
#        source: elasticsearch
#        target: /usr/share/elasticsearch/data
#    environment:
#      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
#      ELASTIC_PASSWORD: changeme
#      discovery.type: single-node
#    networks:
#      - payscam-network
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#
#  kibana:
#    container_name: kibana
#    image: docker.elastic.co/kibana/kibana:7.12.0
#    ports:
#      - "5601:5601"
#    depends_on:
#      - elasticsearch
#    networks:
#      - payscam-network

#volumes:
#  elasticsearch:

networks:
  payscam-network:
    driver: bridge
